<script>
import wepy from 'wepy';
import { BaseURL } from './config';
import 'wepy-async-function'; //允许使用async/await语法

export default class extends wepy.app {
  config = {
    pages: ['pages/index', 'pages/joblist', 'pages/addjob'],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#69c3aa',
      navigationBarTitleText: '兼职',
      navigationBarTextStyle: 'white'
    }
  };

  globalData = {
    token: '', // JWT token
    user: {
      id: 0,
      city: '',
      gender: 0,
      avatar: '',
      country: '',
      nickname: ''
    },
    appCode: '' // 小程序码本地存放路径
  };

  constructor() {
    super();
    //注册中间件
    this.use('promisify'); //配合async/await语法
    this.use('requestfix'); //官方修复请求并发数量

    this.intercept('request', {
      config(p) {
        p.header = this.createAuthHeader();
        return p;
      }
    });
  }

  async onLaunch() {
    console.log('onLaunch');
    wepy.showShareMenu();

    if (!this.checkAuth() || !this.globalData.token) {
      this.login();
    }
  }

  // 检查 access_key 是否已经过期
  checkAuth() {
    wepy.checkSession({
      success() {
        return true;
      },
      fail() {
        return false;
        //重新登录
      }
    });
    console.log('checkAuth');
  }

  // 登录
  async login() {
    const { code } = await wepy.login();
    const param = {
      url: `${BaseURL}/user/token`,
      method: 'GET',
      data: { code }
    };

    const res = await wepy.request(param);
    this.globalData.token = res.data.data;
    console.log('this.globalData.token:', this.globalData.token);
    console.log('login');
  }

  //构造权限头部，中间件
  createAuthHeader() {
    // const loginCode = wepy.$instance.globalData.token;
    const loginCode = this.globalData.token;
    // console.log('loginCode:', loginCode);

    const header = {};
    if (loginCode) {
      header['Authorization'] = `Bearer ${loginCode}`;
    }
    return header;
  }


  //获取微信用户信息
  async getUserInfo() {
    const rawUser =
      this.globalData.user.nickname != ''
        ? this.globalData.user
        : await wepy.getUserInfo();

    const { avatarUrl, gender, nickName, city, country } = rawUser.userInfo;
    this.globalData.user.city = city;
    this.globalData.user.gender = gender;
    this.globalData.user.country = country;
    this.globalData.user.avatar = avatarUrl;
    this.globalData.user.nickname = nickName;
    // console.log('getUserInfo', rawUser.encryptedData);

    // 没什么用，解密出来的信息和userInfo的内容一样，我擦
    // const wxUser = await this.decodeUserInfo(rawUser);
    // console.log('decodeUserInfo', wxUser);

    return this.globalData.user;
  }

  //服务端解密用户信息
  async decodeUserInfo(rawUser) {
    const param = {
      data: { iv: rawUser.iv, encryptedData: rawUser.encryptedData},
      method: 'GET',
      url:`${BaseURL}/user/decode_userinfo`
    };
    const res = await wepy.request(param);
    return res.data.data;
  }


  // 全局分享设置
  // imageUrl 分享图片路径
  shareAppMessage(imageUrl = null) {
    return {
      path: `/pages/index?inviter=${this.globalData.user.id}`,
      imageUrl,
      title: '试试你的演技值多少分',
      fail: res => {
        wepy.showToast({
          title: '装逼失败 请重试',
          icon: 'none'
        });
      }
    };
  }
}
</script>

<style lang="less">
@import './style/weui';
@import './style/variables';
@import './style/iconfont';

page {
    font-family: -apple-system-font, Helvetica Neue, Helvetica, sans-serif;
    font-size: 10pt;
    line-height: 150%;
    min-height: 100%;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }
  
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
  
  .btn {
    font-size: 13pt;
    line-height: 85rpx;
    height: 85rpx;
    background: @green;
    color: @white;
    text-align: center;
    border-radius: 100rpx;
    margin: 40rpx;
  }
  
  .btn-hover {
    opacity: 0.8;
  }

</style>
