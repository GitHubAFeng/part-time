<template>
  <view class="container">
    <view class="user-box">
      <image class="logo" src="{{ user.avatar }}" />
      <whale :show.sync="true"></whale>
    </view>
    <view class="content">
      <view class="hd" style="transform:rotateZ({{angle}}deg);">
        <image class="wave" src="/style/image/wave.png" mode="aspectFill" />
        <image class="wave wave-bg" src="/style/image/wave.png" mode="aspectFill" />
      </view>
      <view class="bd">
        <scroll-view class="scroller" enable-back-to-top="true" scroll-y="true" upper-threshold="50" lower-threshold="100" bindscrolltolower="scrolltolower">
          <view class="leaderboards">
            <taskListCom :list.sync="tasklist"></taskListCom>
          </view>
        </scroll-view>
        <text class="tail">请认真查阅注意事项</text>
      </view>
    </view>
  </view>

  <!--页面底部加载更多时的动画-->
  <bottomLoadMore :show.sync="showLoading" message="正在加载中"></bottomLoadMore>
  <!--暂无数据时显示-->
  <placeholder :show.sync="is_empty" message="暂无更多任务"></placeholder>

</template>

<script>
import wepy from 'wepy';
import { BaseURL } from '../config';
import TaskApi from '../api/task';
import Tips from '../utils/Tips';
import bottomLoadMore from '../components/bottom_load_more';
import placeholder from '../components/Placeholder';
import taskListCom from '../components/taskList';
import whale from '../components/whale';

export default class JobList extends wepy.page {
  config = {
    navigationBarTitleText: '',
    enablePullDownRefresh: false,
    disableScroll: true,
    navigationBarBackgroundColor: '#69c3aa'
  };

  data = {
    tasklist: [],
    ranking: 0,
    angle: 0,
    user: {
      title: '',
      record: 0
    },
    //是否显示 底部loading
    showLoading: true,
    //当前页面
    currentPage: 1,
    //总页数
    page_total: 0,
    //是否没有更多数据
    is_empty: false
  };

  components = {
    taskListCom,
    bottomLoadMore,
    placeholder,
    whale
  };

  async onLoad(options) {
    let that = this;
    const { avatar } = await this.$parent.globalData.user;
    this.user.avatar = avatar;

    this.currentPage = 1;
    this.getList();
  }

  methods = {
    scrolltolower: function(e) {
      console.log('home-scrolltolower');
      let that = this;
      //是否显示 底部loading
      this.showLoading = true;
      this.is_empty = false;
      that.currentPage++;
      that.getList(that.currentPage);
    }
  };

  onShareAppMessage(res) {
    return this.$parent.shareAppMessage();
  }

  onReady() {
    wepy.onAccelerometerChange(res => {
      var angle = -(res.x * 30).toFixed(1);
      if (angle > 14) {
        angle = 14;
      } else if (angle < -14) {
        angle = -14;
      }
      if (this.angle !== angle) {
        this.angle = angle;
      }
    });
  }

  //取列表数据
  async getList(currentPage, size) {
    let that = this;
    that.showLoading = true;

    const result = TaskApi.infoList({
      page: currentPage || 1,
      size: size || 10
    });
    result.then(v => {
      const keys = Object.keys(v.data);
      console.log('keys  = ', keys);
      if (keys.length === 0) {
        //暂无数据
        that.is_empty = true;
      } else {
        that.tasklist = [...that.tasklist, ...v.data];
        console.log('this.data.tasklist  = ', that.tasklist);
      }
      that.showLoading = false;
      that.$apply();
    });
  }
}
</script>

<style lang="less">
@import '../style/variables';

.container {
  position: relative;
  flex: 1;
  display: flex;
  flex-direction: column;
  background: @green;
  align-items: stretch;
  padding: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;
  justify-content: space-around;
  box-sizing: border-box;
}
.content {
  flex: 1;
  display: flex;
  position: relative;
  z-index: 10;
  flex-direction: column;
  align-items: stretch;
  justify-content: center;
  width: 100%;
  background: -webkit-gradient(
    linear,
    left top,
    left bottom,
    from(rgba(244, 244, 244, 0)),
    color-stop(0.1, @white),
    to(@white)
  );
  opacity: 0;
  transform: translate3d(0, 100%, 0);
  animation: rise 3s cubic-bezier(0.19, 1, 0.22, 1) 0.25s forwards;
}

.user-box {
  position: absolute;
  top: 3vh;
  left: 3vh;
  display: flex;
}

.logo {
  z-index: 2;
  width: 160rpx;
  height: 160rpx;
  border-radius: 160rpx;
  opacity: 0.95;
}

.level {
  color: @white;
  padding-left: 20rpx;
  line-height: 160rpx;
  font-size: 16pt;
  font-weight: bold;
}

@keyframes rise {
  0% {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 1;
    transform: translate3d(0, 450rpx, 0);
  }
}

@keyframes show {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 0.95;
  }
}

.hd {
  position: absolute;
  top: 0;
  left: 50%;
  width: 1000rpx;
  margin-left: -500rpx;
  height: 200rpx;
  transition: all 0.35s ease;
}

@keyframes sway {
  0% {
    transform: translate3d(0, 20rpx, 0) rotate(-15deg);
  }
  17% {
    transform: translate3d(0, 0rpx, 0) rotate(25deg);
  }
  34% {
    transform: translate3d(0, -20rpx, 0) rotate(-20deg);
  }
  50% {
    transform: translate3d(0, -10rpx, 0) rotate(15deg);
  }
  67% {
    transform: translate3d(0, 10rpx, 0) rotate(-25deg);
  }
  84% {
    transform: translate3d(0, 15rpx, 0) rotate(15deg);
  }
  100% {
    transform: translate3d(0, 20rpx, 0) rotate(-15deg);
  }
}
.wave {
  position: absolute;
  z-index: 3;
  right: 0;
  bottom: 0;
  opacity: 0.725;
  height: 450rpx;
  width: 2250rpx;
  animation: wave 10s linear infinite;
}
.wave-bg {
  z-index: 1;
  animation: wave-bg 10.25s linear infinite;
}
@keyframes wave {
  from {
    transform: translate3d(125rpx, 0, 0);
  }
  to {
    transform: translate3d(1125rpx, 0, 0);
  }
}
@keyframes wave-bg {
  from {
    transform: translate3d(375rpx, 0, 0);
  }
  to {
    transform: translate3d(1375rpx, 0, 0);
  }
}

.bd {
  position: relative;
  flex: 1;
  display: flex;
  flex-direction: column;
  margin-top: -150rpx;
  align-items: stretch;
  animation: bd-rise 2s cubic-bezier(0.23, 1, 0.32, 1) 0.75s forwards;
  opacity: 0;
}
@keyframes bd-rise {
  from {
    opacity: 0;
    transform: translate3d(0, 60rpx, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

.tail {
  width: 100%;
  position: absolute;
  top: 70vh;
  display: flex;
  justify-content: space-around;
  font-size: 10pt;
  color: #999;
  text-align: center;
}

.record {
  font-size: 14pt;
  color: @white;
}
.scroller {
  height: 70vh;
}
// .leaderboards {
//   color: @green;
//   display: flex;
//   width: 100%;
//   flex-direction: column;
//   align-items: center;
//   justify-content: center;
// }
.friend-item {
  display: flex;
  padding: 20rpx 0;
}
.number {
  font-size: 25pt;
  line-height: 100rpx;
  font-weight: bold;
}
.friend-avatar {
  width: 100rpx;
  margin-left: 10rpx;
  height: 100rpx;
  border-radius: 100rpx;
  border: 1rpx solid @green;
}

.friend-item-right {
  margin-left: 15rpx;
  line-height: 50rpx;
  display: flex;
  flex-direction: column;
  font-size: 15pt;
}
</style>

