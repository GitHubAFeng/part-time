<template>
  <view class="container">
    <view class="cloud-box">
      <image class="corel" src="/style/corel.png" mode="aspectFill" />
      <image class="cloud-4"  src="/style/image/cloud.png" mode="aspectFill" />
      <image class="cloud-5"  src="/style/image/cloud.png" mode="aspectFill" />
      <image class="cloud-6"  src="/style/image/cloud.png" mode="aspectFill" />
    </view>
    
    <view class="top-box">
      <image class="logo" src="{{ user.avatar }}" />
      <text class="level">{{ user.nickname }}</text>
      <!-- <text class="record">最高记录: {{ user.record }}分</text> -->
    </view>

    <view class="content">
      <view class="hd" style="transform:rotateZ({{angle}}deg);">
        <image class="wave" src="/style/image/wave.png" mode="aspectFill" />
        <image class="wave wave-bg" src="/style/image/wave.png" mode="aspectFill" />
      </view>
      <view class="bd">
        <navigator url="/pages/joblist" class="btn" hover-class="btn-hover">寻找</navigator>
        <navigator url="/pages/addjob" class="btn" hover-class="btn-hover">发布</navigator>
        <text class="tail">请认真查阅注意事项</text>
      </view>
    </view>
    
  </view>
</template>

<script>
import wepy from 'wepy';
import { BaseURL } from '../config';
import userApi from '../api/user';

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '',
    enablePullDownRefresh: false,
    disableScroll: true,
    navigationBarBackgroundColor: '#69c3aa'
  };

  data = {
    angle: 0,
    user: {
      title: '',
      record: 0
    },
    winWidth: 0
    // animationData:{},
  };

  async onLoad(options) {
    const {
      avatar,
      gender,
      nickname,
      city,
      country
    } = await this.$parent.getUserInfo();

    this.user.avatar = avatar;
    this.user.gender = gender;
    this.user.nickname = nickname;

    // 更新用户资料
    // wepy.request({
    //   data: {
    //     city,
    //     avatar,
    //     gender,
    //     // 邀请者
    //     inviter:
    //       (!options.scene ? 0 : Number(decodeURIComponent(options.scene))) ||
    //       (!options.inviter ? 0 : Number(options.inviter)),
    //     country,
    //     nickname
    //   },
    //   method: 'POST',
    //   url: `${BaseURL}/auth/user`,
    //   header: await this.$parent.authHeader()
    // });

    const data = {
      city,
      avatar,
      gender,
      country,
      nickname,
      openid:'oqjZc5UBrVpCA2ugUzVuHtpZ2v4g'
    };

    userApi.update(data);

    this.$apply();
    console.log('onLoad');
  }

  // 获取用户数据
  async getUserData() {
    wepy.request({
      method: 'GET',
      url: `${BaseURL}/auth/user`,
      header: await this.$parent.authHeader(),
      success: res => {
        this.user.title = res.data.title;
        this.user.record = res.data.record;
        this.$parent.globalData.user.id = res.data.id;
        this.$apply();
      }
    });
  }

  onShow() {
    // this.getUserData();

    const { windowWidth } = wepy.getSystemInfoSync();
    this.winWidth = windowWidth;

    //动画，但做循环不方便
    // let animation = wx.createAnimation();
    // this.animationData = animation.translate(200).step({
    //   duration: 5000,
    //   timingFunction: 'linear',
    //   delay:2000
    // })
    // .export();

    console.log('onShow');
  }

  onShareAppMessage(res) {
    return this.$parent.shareAppMessage();
    console.log('onShareAppMessage');
  }

  onReady() {
    wepy.onAccelerometerChange(res => {
      var angle = -(res.x * 30).toFixed(1);
      if (angle > 14) {
        angle = 14;
      } else if (angle < -14) {
        angle = -14;
      }
      if (this.angle !== angle) {
        this.angle = angle;
      }
    });
    console.log('onReady');
  }
}
</script>

<style lang="less">
@import '../style/variables';

@cloud-6-width: 266rpx * 0.3;
@cloud-6-height: 144rpx * 0.3;
@cloud-5-width: 212.8rpx * 0.3;
@cloud-5-height: 115.2rpx * 0.3;
@cloud-4-width: 212.133rpx * 0.3;
@cloud-4-height: 72rpx * 0.3;
@corel-width: 100rpx * 0.7;
@corel-height: 104rpx * 0.7;

.container {
  position: relative;
  flex: 1;
  display: flex;
  flex-direction: column;
  background: @green;
  align-items: stretch;
  padding: 0;
  height: 100%;
  overflow: hidden;
  justify-content: space-between;
  box-sizing: border-box;
}
.content {
  flex: 1;
  display: flex;
  position: relative;
  z-index: 3;
  flex-direction: column;
  align-items: stretch;
  justify-content: center;
  width: 100%;
  margin-top: -300rpx;
  padding-bottom: 500rpx;
  background: -webkit-gradient(
    linear,
    left top,
    left bottom,
    from(rgba(244, 244, 244, 0)),
    color-stop(0.1, @white),
    to(@white)
  );
  opacity: 0;
  transform: translate3d(0, 100%, 0);
  animation: rise 3s cubic-bezier(0.19, 1, 0.22, 1) 0.25s forwards;
}

.top-box {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  // justify-content: center;
  margin-top: -150rpx;
  height: 50rpx;
}

@keyframes rise {
  0% {
    opacity: 0;
    transform: translate3d(0, 100%, 0);
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 1;
    transform: translate3d(0, 450rpx, 0);
  }
}

@keyframes show {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.hd {
  position: absolute;
  top: 0;
  left: 50%;
  width: 1000rpx;
  margin-left: -500rpx;
  height: 200rpx;
  transition: all 0.35s ease;
}
.logo {
  z-index: 2;
  width: 160rpx;
  height: 160rpx;
  margin: 0 auto;
  border-radius: 160rpx;
  opacity: 0.95;
  margin-top: 20%;
}
@keyframes sway {
  0% {
    transform: translate3d(0, 20rpx, 0) rotate(-15deg);
  }
  17% {
    transform: translate3d(0, 0rpx, 0) rotate(25deg);
  }
  34% {
    transform: translate3d(0, -20rpx, 0) rotate(-20deg);
  }
  50% {
    transform: translate3d(0, -10rpx, 0) rotate(15deg);
  }
  67% {
    transform: translate3d(0, 10rpx, 0) rotate(-25deg);
  }
  84% {
    transform: translate3d(0, 15rpx, 0) rotate(15deg);
  }
  100% {
    transform: translate3d(0, 20rpx, 0) rotate(-15deg);
  }
}
.wave {
  position: absolute;
  z-index: 3;
  right: 0;
  bottom: 0;
  opacity: 0.725;
  height: 260rpx;
  width: 2250rpx;
  animation: wave 10s linear infinite;
}
.wave-bg {
  z-index: 1;
  animation: wave-bg 10.25s linear infinite;
}
@keyframes wave {
  from {
    transform: translate3d(125rpx, 0, 0);
  }
  to {
    transform: translate3d(1125rpx, 0, 0);
  }
}
@keyframes wave-bg {
  from {
    transform: translate3d(375rpx, 0, 0);
  }
  to {
    transform: translate3d(1375rpx, 0, 0);
  }
}

.bd {
  position: relative;
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  animation: bd-rise 2s cubic-bezier(0.23, 1, 0.32, 1) 0.75s forwards;
  opacity: 0;
}
@keyframes bd-rise {
  from {
    opacity: 0;
    transform: translate3d(0, 60rpx, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

.tail {
  width: 100%;
  position: fixed;
  bottom: 0;
  display: flex;
  justify-content: space-around;
  font-size: 28rpx;
  color: #999;
  text-align: center;
}

.level {
  padding: 20px;
  color: @white;
  font-size: 18pt;
  font-weight: bold;
  text-align: center;
}

.record {
  font-size: 14pt;
  color: @white;
}

.cloud-box {
  display: flex;
  flex-direction: column;
  margin-top: -50rpx;
  height: 245rpx;

  .corel {
    margin-top: 10%;
    margin-left: 60%;
    width: @corel-width;
    height: @corel-height;
    justify-content: center;
    animation: corel-amin 5s linear infinite;
    // animation-name:corel-amin;
    // animation-duration:0s;
    // animation-timing-function:linear;
    // animation-delay:10s;
    // animation-iteration-count:infinite;
    // animation-fill-mode:forwards;
    // animation-direction:normal;
  }

  .cloud-6 {
    width: @cloud-6-width;
    height: @cloud-6-height;
    margin-left: 60%;
    animation: cloud-amin 30s linear infinite;
  }
  .cloud-5 {
    width: @cloud-5-width;
    height: @cloud-5-height;
    animation: cloud-amin 40s linear infinite;
  }
  .cloud-4 {
    width: @cloud-4-width;
    height: @cloud-4-height;
    animation: cloud-amin 50s linear infinite;
  }
}

@keyframes cloud-amin {
  0% {
    opacity: 0;
    transform: translate3d(0, 0, 0);
  }

  5% {
    opacity: 0.5;
  }

  10% {
    opacity: 1;
  }

  90% {
    opacity: 1;
  }

  95% {
    opacity: 0.5;
  }

  100% {
    transform: translate3d(750rpx, 0, 0);
    opacity: 0;
  }
}

@keyframes corel-amin {
  0% {
    transform: translate3d(0, 0, 0);
  }

  50% {
    transform: translate3d(0, 30rpx, 0);
  }

  100% {
    transform: translate3d(0, 0, 0);
  }
}
</style>

